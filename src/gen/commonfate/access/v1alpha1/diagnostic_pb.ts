// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file commonfate/access/v1alpha1/diagnostic.proto (package commonfate.access.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage
} from '@bufbuild/protobuf'
import { Message, proto3 } from '@bufbuild/protobuf'
import { EID } from '../../entity/v1alpha1/eid_pb.js'

/**
 * @generated from enum commonfate.access.v1alpha1.DiagnosticLevel
 */
export enum DiagnosticLevel {
  /**
   * @generated from enum value: DIAGNOSTIC_LEVEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DIAGNOSTIC_LEVEL_INFO = 1;
   */
  INFO = 1,

  /**
   * @generated from enum value: DIAGNOSTIC_LEVEL_WARNING = 2;
   */
  WARNING = 2,

  /**
   * @generated from enum value: DIAGNOSTIC_LEVEL_ERROR = 3;
   */
  ERROR = 3
}
// Retrieve enum metadata with: proto3.getEnumType(DiagnosticLevel)
proto3.util.setEnumType(
  DiagnosticLevel,
  'commonfate.access.v1alpha1.DiagnosticLevel',
  [
    { no: 0, name: 'DIAGNOSTIC_LEVEL_UNSPECIFIED' },
    { no: 1, name: 'DIAGNOSTIC_LEVEL_INFO' },
    { no: 2, name: 'DIAGNOSTIC_LEVEL_WARNING' },
    { no: 3, name: 'DIAGNOSTIC_LEVEL_ERROR' }
  ]
)

/**
 * @generated from message commonfate.access.v1alpha1.Diagnostic
 */
export class Diagnostic extends Message<Diagnostic> {
  /**
   * @generated from field: commonfate.access.v1alpha1.DiagnosticLevel level = 1;
   */
  level = DiagnosticLevel.UNSPECIFIED

  /**
   * The resource the diagnostic message relates to.
   * Can be empty if the message doesn't relate to a particular resource.
   *
   * @generated from field: commonfate.entity.v1alpha1.EID resource = 2;
   */
  resource?: EID

  /**
   * The message.
   *
   * @generated from field: string message = 3;
   */
  message = ''

  constructor(data?: PartialMessage<Diagnostic>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'commonfate.access.v1alpha1.Diagnostic'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'level',
      kind: 'enum',
      T: proto3.getEnumType(DiagnosticLevel)
    },
    { no: 2, name: 'resource', kind: 'message', T: EID },
    { no: 3, name: 'message', kind: 'scalar', T: 9 /* ScalarType.STRING */ }
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): Diagnostic {
    return new Diagnostic().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): Diagnostic {
    return new Diagnostic().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): Diagnostic {
    return new Diagnostic().fromJsonString(jsonString, options)
  }

  static equals(
    a: Diagnostic | PlainMessage<Diagnostic> | undefined,
    b: Diagnostic | PlainMessage<Diagnostic> | undefined
  ): boolean {
    return proto3.util.equals(Diagnostic, a, b)
  }
}
