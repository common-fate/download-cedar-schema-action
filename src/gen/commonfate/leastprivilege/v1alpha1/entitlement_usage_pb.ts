// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file commonfate/leastprivilege/v1alpha1/entitlement_usage.proto (package commonfate.leastprivilege.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage
} from '@bufbuild/protobuf'
import { Message, proto3, Timestamp } from '@bufbuild/protobuf'
import { NamedEID } from '../../access/v1alpha1/named_eid_pb.js'
import { User } from '../../access/v1alpha1/user_pb.js'

/**
 * @generated from enum commonfate.leastprivilege.v1alpha1.Usage
 */
export enum Usage {
  /**
   * It was not possible to infer whether the entitlement is in use or not.
   *
   * @generated from enum value: USAGE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The entitlement is currently in use.
   *
   * @generated from enum value: USAGE_IN_USE = 3;
   */
  IN_USE = 3,

  /**
   * The entitlement is unused.
   *
   * @generated from enum value: USAGE_UNUSED = 4;
   */
  UNUSED = 4
}
// Retrieve enum metadata with: proto3.getEnumType(Usage)
proto3.util.setEnumType(Usage, 'commonfate.leastprivilege.v1alpha1.Usage', [
  { no: 0, name: 'USAGE_UNSPECIFIED' },
  { no: 3, name: 'USAGE_IN_USE' },
  { no: 4, name: 'USAGE_UNUSED' }
])

/**
 * @generated from message commonfate.leastprivilege.v1alpha1.EntitlementUsage
 */
export class EntitlementUsage extends Message<EntitlementUsage> {
  /**
   * @generated from field: commonfate.access.v1alpha1.NamedEID target = 1;
   */
  target?: NamedEID

  /**
   * @generated from field: commonfate.access.v1alpha1.NamedEID role = 2;
   */
  role?: NamedEID

  /**
   * @generated from field: commonfate.access.v1alpha1.User principal = 3;
   */
  principal?: User

  /**
   * @generated from field: commonfate.leastprivilege.v1alpha1.Usage Usage = 4;
   */
  Usage = Usage.UNSPECIFIED

  /**
   * @generated from field: string usage_reason = 5;
   */
  usageReason = ''

  /**
   * @generated from field: repeated commonfate.leastprivilege.v1alpha1.AccessPath access_paths = 6;
   */
  accessPaths: AccessPath[] = []

  /**
   * @generated from field: optional google.protobuf.Timestamp last_used = 7;
   */
  lastUsed?: Timestamp

  constructor(data?: PartialMessage<EntitlementUsage>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName =
    'commonfate.leastprivilege.v1alpha1.EntitlementUsage'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'target', kind: 'message', T: NamedEID },
    { no: 2, name: 'role', kind: 'message', T: NamedEID },
    { no: 3, name: 'principal', kind: 'message', T: User },
    { no: 4, name: 'Usage', kind: 'enum', T: proto3.getEnumType(Usage) },
    {
      no: 5,
      name: 'usage_reason',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */
    },
    {
      no: 6,
      name: 'access_paths',
      kind: 'message',
      T: AccessPath,
      repeated: true
    },
    { no: 7, name: 'last_used', kind: 'message', T: Timestamp, opt: true }
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): EntitlementUsage {
    return new EntitlementUsage().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): EntitlementUsage {
    return new EntitlementUsage().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): EntitlementUsage {
    return new EntitlementUsage().fromJsonString(jsonString, options)
  }

  static equals(
    a: EntitlementUsage | PlainMessage<EntitlementUsage> | undefined,
    b: EntitlementUsage | PlainMessage<EntitlementUsage> | undefined
  ): boolean {
    return proto3.util.equals(EntitlementUsage, a, b)
  }
}

/**
 * @generated from message commonfate.leastprivilege.v1alpha1.AccessPath
 */
export class AccessPath extends Message<AccessPath> {
  /**
   * @generated from field: repeated commonfate.access.v1alpha1.NamedEID path = 1;
   */
  path: NamedEID[] = []

  constructor(data?: PartialMessage<AccessPath>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'commonfate.leastprivilege.v1alpha1.AccessPath'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'path', kind: 'message', T: NamedEID, repeated: true }
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): AccessPath {
    return new AccessPath().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): AccessPath {
    return new AccessPath().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): AccessPath {
    return new AccessPath().fromJsonString(jsonString, options)
  }

  static equals(
    a: AccessPath | PlainMessage<AccessPath> | undefined,
    b: AccessPath | PlainMessage<AccessPath> | undefined
  ): boolean {
    return proto3.util.equals(AccessPath, a, b)
  }
}
