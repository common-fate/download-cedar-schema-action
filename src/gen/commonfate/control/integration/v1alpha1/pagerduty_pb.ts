// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file commonfate/control/integration/v1alpha1/pagerduty.proto (package commonfate.control.integration.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage
} from '@bufbuild/protobuf'
import { Message, proto3 } from '@bufbuild/protobuf'

/**
 * @generated from message commonfate.control.integration.v1alpha1.PagerDuty
 */
export class PagerDuty extends Message<PagerDuty> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = ''

  /**
   * @generated from field: string client_secret_secret_path = 2;
   */
  clientSecretSecretPath = ''

  constructor(data?: PartialMessage<PagerDuty>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'commonfate.control.integration.v1alpha1.PagerDuty'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'client_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    {
      no: 2,
      name: 'client_secret_secret_path',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */
    }
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): PagerDuty {
    return new PagerDuty().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): PagerDuty {
    return new PagerDuty().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): PagerDuty {
    return new PagerDuty().fromJsonString(jsonString, options)
  }

  static equals(
    a: PagerDuty | PlainMessage<PagerDuty> | undefined,
    b: PagerDuty | PlainMessage<PagerDuty> | undefined
  ): boolean {
    return proto3.util.equals(PagerDuty, a, b)
  }
}
